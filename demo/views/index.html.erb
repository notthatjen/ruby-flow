<!DOCTYPE html>
<html>
<head>
  <title>RubyFlow Demo</title>
  <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
  <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
  <script src="https://unpkg.com/@reactflow/core@11.7.0/dist/umd/index.js"></script>
  <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
  <link href="https://unpkg.com/@reactflow/core@11.7.0/dist/style.css" rel="stylesheet" />
  <style>
    body { 
      margin: 0;
      font-family: sans-serif;
    }
    #flow-container {
      width: 100vw;
      height: 100vh;
    }
  </style>
</head>
<body>
  <div id="flow-container"></div>

  <script type="text/babel">
    const { ReactFlow, Background, Controls } = ReactFlowCore;

    function Flow() {
      const [elements, setElements] = React.useState([]);

      React.useEffect(() => {
        fetch('/api/graph')
          .then(response => response.json())
          .then(data => {
            const nodes = data.nodes.map(node => ({
              id: node.id,
              position: node.position,
              data: node.data,
              type: node.type
            }));

            const edges = data.edges.map(edge => ({
              id: edge.id,
              source: edge.source,
              target: edge.target,
              type: edge.type
            }));

            setElements([...nodes, ...edges]);
          });
      }, []);

      return (
        <ReactFlow
          nodes={elements.filter(el => el.position)}
          edges={elements.filter(el => el.source)}
          fitView
        >
          <Background />
          <Controls />
        </ReactFlow>
      );
    }

    ReactDOM.render(
      <Flow />,
      document.getElementById('flow-container')
    );
  </script>
</body>
</html> 